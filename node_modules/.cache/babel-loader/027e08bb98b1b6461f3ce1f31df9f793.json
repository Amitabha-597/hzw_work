{"remainingRequest":"F:\\Project325\\huizhan\\node_modules\\babel-loader\\lib\\index.js!F:\\Project325\\huizhan\\node_modules\\eslint-loader\\index.js??ref--13-0!F:\\Project325\\huizhan\\src\\api\\request.js","dependencies":[{"path":"F:\\Project325\\huizhan\\src\\api\\request.js","mtime":1590644705141},{"path":"F:\\Project325\\huizhan\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1589867250303},{"path":"F:\\Project325\\huizhan\\node_modules\\babel-loader\\lib\\index.js","mtime":1589850514068},{"path":"F:\\Project325\\huizhan\\node_modules\\eslint-loader\\index.js","mtime":1589867254670}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7IC8vIGltcG9ydCByb3V0ZSBmcm9tICIuLy4uLy4uL3JvdXRlciI7Ci8vIGltcG9ydCBzdG9yZSBmcm9tICIuLi8uLi9zdG9yZSI7Ci8vIGltcG9ydCBtZDUgZnJvbSAianMtbWQ1IjsKLy8gZnVuY3Rpb24gbWFrZWlkKGxlbmd0aCA9IDgpIHsKLy8gICB2YXIgcmVzdWx0ID0gIiI7Ci8vICAgdmFyIGNoYXJhY3RlcnMgPQovLyAgICAgIkFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5IjsKLy8gICB2YXIgY2hhcmFjdGVyc0xlbmd0aCA9IGNoYXJhY3RlcnMubGVuZ3RoOwovLyAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspIHsKLy8gICAgIHJlc3VsdCArPSBjaGFyYWN0ZXJzLmNoYXJBdChNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBjaGFyYWN0ZXJzTGVuZ3RoKSk7Ci8vICAgfQovLyAgIHJldHVybiByZXN1bHQ7Ci8vIH0KLy8gbGV0IHN0ciA9IG1ha2VpZCgpOwovLyAvLyBsZXQgcmVxdWVzdD1heGlvcy5jcmVhdGUoewovLyAvLyAgIGJhc2VVUkw6J2h0dHA6Ly96eHR5Lm1yaGtqLmNvbS9pbmRleCcsCi8vIC8vIH0pCi8vIGxldCBxdWVyeSA9Ci8vICAgImFwcF9pZD10cWtkY2tyZWNkdG11YnFhb2ZnbyZhcHBfa2V5PUpIbUZtRWlhQUJvSkdjZ0hBQ2pzbEZ4dWZkSGFIbWd3JnJhbmRvbT0iICsKLy8gICBzdHI7Ci8vIGxldCBzaWduID0gbWQ1KHF1ZXJ5KS50b1VwcGVyQ2FzZSgpOwovLyBheGlvcy5kZWZhdWx0cy5iYXNlVVJMID0KLy8gICBwcm9jZXNzLmVudi5OT0RFX0VOViA9PSAiZGV2ZWxvcG1lbnQiID8gImFwaS8iIDogImh0dHA6Ly96eHR5Lm1yaGtqLmNvbS8iOwovLyByZXF1ZXN05oum5oiq5ZmoIGF4aW9z55qE5LiA5Lqb6YWN572uCgpheGlvcy5pbnRlcmNlcHRvcnMucmVxdWVzdC51c2UoZnVuY3Rpb24gKGNvbmZpZykgewogIHJldHVybiBjb25maWc7Cn0sIGZ1bmN0aW9uIChlcnJvcikgewogIGFsZXJ0KCLplJnor6/nmoTkvKDlj4IiLCAiZmFpbCIpOwogIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcik7Cn0pOyAvLyDoh6rlrprkuYnnmoQgYXhpb3Mg5ZON5bqU5oum5oiq5ZmoCgpheGlvcy5pbnRlcmNlcHRvcnMucmVzcG9uc2UudXNlKGZ1bmN0aW9uIChyZXNwb25zZSkgewogIC8vIOWIpOaWreS4gOS4i+WTjeW6lOS4reaYr+WQpuaciSB0b2tlbu+8jOWmguaenOacieWwseebtOaOpeS9v+eUqOatpCB0b2tlbiDmm7/mjaLmjonmnKzlnLDnmoQgdG9rZW7jgILkvaDlj6/ku6XmoLnmja7kvaDnmoTkuJrliqHpnIDmsYLoh6rlt7HnvJblhpnmm7TmlrAgdG9rZW4g55qE6YC76L6RCiAgLy8gdmFyIHRva2VuID0gcmVzcG9uc2UuZGF0YS5kYXRhLnRva2VuOwogIC8vIGlmICh0b2tlbikgewogIC8vICAgLy8g5aaC5p6cIGhlYWRlciDkuK3lrZjlnKggdG9rZW7vvIzpgqPkuYjop6blj5EgcmVmcmVzaFRva2VuIOaWueazle+8jOabv+aNouacrOWcsOeahCB0b2tlbgogIC8vICAgc3RvcmUuY29tbWl0KCJVUERBVEVfVE9LRU4iLCB0b2tlbik7CiAgLy8gfSBlbHNlIHsKICAvLyAgIC8vIHJvdXRlLnJlcGxhY2UoJy8nKQogIC8vICAgaWYgKHJlc3BvbnNlLmRhdGEuY29kZSA9PSA0MDEpIHsKICAvLyAgICAgcm91dGUucmVwbGFjZSgiLyIpOwogIC8vICAgfQogIC8vIH0KICByZXR1cm4gcmVzcG9uc2U7Cn0sIGZ1bmN0aW9uIChlcnJvcikgewogIC8vIGlmIChlcnJvci5yZXNwb25zZSkgewogIC8vICAgICBzd2l0Y2ggKGVycm9yLnJlc3BvbnNlLnN0YXR1cykgewogIC8vICAgICAgICAgY2FzZSA0MDE6CiAgLy8gICAgICAgICAgICAgLy8g6L+Z6YeM5YaZ5riF6ZmkdG9rZW7nmoTku6PnoIEKICAvLyAgICAgICAgICAgICByb3V0ZS5yZXBsYWNlKHsKICAvLyAgICAgICAgICAgICAgICAgcGF0aDogJy8nLAogIC8vICAgICAgICAgICAgIH0pCiAgLy8gICAgIH0KICAvLyB9CiAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTsKfSk7CmV4cG9ydCBkZWZhdWx0IGF4aW9zOw=="},{"version":3,"sources":["F:/Project325/huizhan/src/api/request.js"],"names":["axios","interceptors","request","use","config","error","alert","Promise","reject","response"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,KAAK,CAACC,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CACE,UAACC,MAAD,EAAY;AAEV,SAAOA,MAAP;AACD,CAJH,EAKE,UAACC,KAAD,EAAW;AACTC,EAAAA,KAAK,CAAC,OAAD,EAAU,MAAV,CAAL;AACA,SAAOC,OAAO,CAACC,MAAR,CAAeH,KAAf,CAAP;AACD,CARH,E,CAWA;;AACAL,KAAK,CAACC,YAAN,CAAmBQ,QAAnB,CAA4BN,GAA5B,CACE,UAACM,QAAD,EAAc;AACZ;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAOA,QAAP;AACD,CAfH,EAgBE,UAACJ,KAAD,EAAW;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAOE,OAAO,CAACC,MAAR,CAAeH,KAAf,CAAP;AACD,CA3BH;AA6BA,eAAeL,KAAf","sourcesContent":["import axios from \"axios\";\r\n// import route from \"./../../router\";\r\n// import store from \"../../store\";\r\n// import md5 from \"js-md5\";\r\n\r\n// function makeid(length = 8) {\r\n//   var result = \"\";\r\n//   var characters =\r\n//     \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n//   var charactersLength = characters.length;\r\n//   for (var i = 0; i < length; i++) {\r\n//     result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n//   }\r\n//   return result;\r\n// }\r\n// let str = makeid();\r\n// // let request=axios.create({\r\n// //   baseURL:'http://zxty.mrhkj.com/index',\r\n// // })\r\n\r\n// let query =\r\n//   \"app_id=tqkdckrecdtmubqaofgo&app_key=JHmFmEiaABoJGcgHACjslFxufdHaHmgw&random=\" +\r\n//   str;\r\n// let sign = md5(query).toUpperCase();\r\n// axios.defaults.baseURL =\r\n//   process.env.NODE_ENV == \"development\" ? \"api/\" : \"http://zxty.mrhkj.com/\";\r\n// request拦截器 axios的一些配置\r\naxios.interceptors.request.use(\r\n  (config) => {\r\n   \r\n    return config;\r\n  },\r\n  (error) => {\r\n    alert(\"错误的传参\", \"fail\");\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// 自定义的 axios 响应拦截器\r\naxios.interceptors.response.use(\r\n  (response) => {\r\n    // 判断一下响应中是否有 token，如果有就直接使用此 token 替换掉本地的 token。你可以根据你的业务需求自己编写更新 token 的逻辑\r\n    // var token = response.data.data.token;\r\n\r\n    // if (token) {\r\n    //   // 如果 header 中存在 token，那么触发 refreshToken 方法，替换本地的 token\r\n    //   store.commit(\"UPDATE_TOKEN\", token);\r\n    // } else {\r\n    //   // route.replace('/')\r\n    //   if (response.data.code == 401) {\r\n    //     route.replace(\"/\");\r\n    //   }\r\n    // }\r\n    return response;\r\n  },\r\n  (error) => {\r\n    // if (error.response) {\r\n    //     switch (error.response.status) {\r\n    //         case 401:\r\n    //             // 这里写清除token的代码\r\n    //             route.replace({\r\n    //                 path: '/',\r\n    //             })\r\n    //     }\r\n    // }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\nexport default axios;\r\n"]}]}